diff --git a/libraries/node/deps/v8/src/arm/cpu-arm.cc b/libraries/node/deps/v8/src/arm/cpu-arm.cc
index 7b08ed8..9e5cb69 100644
--- a/libraries/node/deps/v8/src/arm/cpu-arm.cc
+++ b/libraries/node/deps/v8/src/arm/cpu-arm.cc
@@ -38,6 +38,10 @@
 #include "macro-assembler.h"
 #include "simulator.h"  // for cache flushing.
 
+#if defined(V8_TARGET_OS_IOS)
+#include <libkern/OSCacheControl.h>
+#endif
+
 namespace v8 {
 namespace internal {
 
@@ -70,7 +74,9 @@ void CPU::FlushICache(void* start, size_t size) {
   //           reinterpret_cast<intptr_t>(start) + size, 0);
   // however, syscall(int, ...) is not supported on all platforms, especially
   // not when using EABI, so we call the __ARM_NR_cacheflush syscall directly.
-
+#if defined(V8_TARGET_OS_IOS)
+  sys_icache_invalidate(start, size);
+#else
   register uint32_t beg asm("a1") = reinterpret_cast<uint32_t>(start);
   register uint32_t end asm("a2") =
       reinterpret_cast<uint32_t>(start) + size;
@@ -103,6 +109,7 @@ void CPU::FlushICache(void* start, size_t size) {
         : "0" (beg), "r" (end), "r" (flg), "r" (__ARM_NR_cacheflush)
         : "r3");
   #endif
+#endif // V8_TARGET_OS_IOS
 #endif
 }